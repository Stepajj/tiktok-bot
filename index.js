const TelegramBot = require("node-telegram-bot-api");
const axios = require("axios");

const TOKEN = "8362711196:AAE6oEObqBQxrFWwlAzPbEYZk-ivC1VM7pY";
const bot = new TelegramBot(TOKEN, { polling: true });
const API_URL = "https://www.tikwm.com/api/";

bot.on("message", async (msg) => {
  const chatId = msg.chat.id;
  const text = msg.text?.trim();

  if (msg.from.is_bot) return; // –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Å–≤–æ–∏ —Å–æ–æ–±—â–µ–Ω–∏—è

  // –ø—Ä–∏–≤–∞—Ç–Ω—ã–π —á–∞—Ç ‚Äî –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
  if (msg.chat.type === "private" && text === "/start") {
    return bot.sendMessage(
      chatId,
      "üëã –ü—Ä–∏–≤–µ—Ç! –î–æ–±–∞–≤—å –º–µ–Ω—è –≤ –≥—Ä—É–ø–ø—É, –∏ —è –±—É–¥—É –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å TikTok –≤–∏–¥–µ–æ –∏–ª–∏ —Ñ–æ—Ç–æ–ø–æ—Å—Ç—ã –±–µ–∑ –≤–æ–¥—è–Ω–æ–≥–æ –∑–Ω–∞–∫–∞."
    );
  }

  // –í –≥—Ä—É–ø–ø–∞—Ö/—á–∞—Ç–∞—Ö —Ä–µ–∞–≥–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –Ω–∞ TikTok —Å—Å—ã–ª–∫–∏
  if (text && text.includes("tiktok.com")) {
    try {
      const response = await axios.post(API_URL, { url: text });
      const data = response.data.data;

      if (!data) {
        return bot.sendMessage(chatId, "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ.");
      }

      // 1Ô∏è‚É£ –ï—Å–ª–∏ —Ñ–æ—Ç–æ–ø–æ—Å—Ç
      if (data.images && data.images.length > 0) {
        const mediaGroup = data.images.slice(0, 10).map((img) => ({
          type: "photo",
          media: img,
        }));
        return bot.sendMediaGroup(chatId, mediaGroup);
      }

      // 2Ô∏è‚É£ –ï—Å–ª–∏ –≤–∏–¥–µ–æ
      if (data.play) {
        return bot.sendVideo(chatId, data.play, {
          caption: "üé¨ –í–æ—Ç TikTok –±–µ–∑ –≤–æ–¥—è–Ω–æ–≥–æ –∑–Ω–∞–∫–∞",
        });
      }

      bot.sendMessage(chatId, "‚ö†Ô∏è –°—Å—ã–ª–∫–∞ –µ—Å—Ç—å, –Ω–æ –Ω–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç.");
    } catch (err) {
      console.error(err);
      bot.sendMessage(chatId, "‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å—Å—ã–ª–∫–∏.");
    }
  }

  // –í—Å—ë –æ—Å—Ç–∞–ª—å–Ω–æ–µ –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º
});
